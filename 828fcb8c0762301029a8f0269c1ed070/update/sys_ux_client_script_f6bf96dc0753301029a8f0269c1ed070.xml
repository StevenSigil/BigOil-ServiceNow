<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ux_client_script">
    <sys_ux_client_script action="INSERT_OR_UPDATE">
        <includes/>
        <macroponent display_value="lists">e6bf169c0753301029a8f0269c1ed021</macroponent>
        <name>Handle Click with SysID</name>
        <required_translations/>
        <script><![CDATA[function handler({ api, event, helpers, imports }) {
  var { recordTable, sys_id, name } = event.payload.clickTarget;
  const currList = api.state.currList;

  try {
    if (!sys_id && name.toString().includes("BUTTON#CLICKED")) {
      // "New" button clicked... sys_id && recordTable should be "undefined"
      const listMenuIDs = api.context.props.listMenuIDs;

      sys_id = -1;

      // set recordTable to the name of the navigation list (all lists should pass if checks)
      recordTable =
        Object.keys(listMenuIDs)[
          Object.values(listMenuIDs).findIndex((i) => i === currList.toString())
        ];
    }

    const newURLs = {
      salesOrder_existing: ["sales-order-viewer", { sysid: sys_id }],
      salesOrder_new: ["sales-order-new", { sOrder: sys_id }],
      auth_req: ["auth-request", {}],
      auth_req_exist: ["auth-request-existing", { sysid: sys_id }],
      companies: ["customer-details", { sysid: sys_id }],
    };

    // console.log(recordTable, sys_id, name, currList);

    var nav;

    if (
      recordTable.includes("sales_order") ||
      recordTable.includes("my_drafts")
    ) {
      nav = sys_id == -1 ? newURLs.salesOrder_new : newURLs.salesOrder_existing;
    }
    if (recordTable.includes("authorization_request")) {
      nav = sys_id == -1 ? newURLs.auth_req : newURLs.auth_req_exist;
    }
    if (recordTable == "x_683715_big_oil_2_companies") {
      nav = newURLs.companies;
    }
    if (recordTable == "x_683715_big_oil_2_user_profile") {
      // Lookup profile and Open modal
      api.setState("userProfileClicked", { table: recordTable, sysId: sys_id });
      return;
    }

    nav ? helpers.navigate.to(nav[0], nav[1]) : null;
  } catch (err) {
    console.log(err);

    // Error alert
    const items = [
      {
        id: 0,
        status: "critical",
        icon: null,
        content:
          "An error has occurred. Please contact Customer Support for more information.",
        action: { type: "dismiss" },
      },
    ];

    api.emit("NOW_UXF_PAGE#ADD_NOTIFICATIONS", { items });

    helpers.timing.setTimeout(() => {
      api.emit("NOW_UXF_PAGE#CLEAR_NOTIFICATIONS");
      console.log("timeout executed!");
    }, 4000);
  }
}]]></script>
        <script_api_version>2.0.0</script_api_version>
        <sys_class_name>sys_ux_client_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-10-15 19:12:20</sys_created_on>
        <sys_id>f6bf96dc0753301029a8f0269c1ed070</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Handle Click with SysID</sys_name>
        <sys_package display_value="Big Oil 2" source="x_683715_big_oil_2">828fcb8c0762301029a8f0269c1ed070</sys_package>
        <sys_policy/>
        <sys_scope display_value="Big Oil 2">828fcb8c0762301029a8f0269c1ed070</sys_scope>
        <sys_update_name>sys_ux_client_script_f6bf96dc0753301029a8f0269c1ed070</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-10-15 19:12:20</sys_updated_on>
    </sys_ux_client_script>
</record_update>
